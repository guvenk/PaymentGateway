// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210504134133_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Merchant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("merchant");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Amazon"
                        });
                });

            modelBuilder.Entity("DataAccess.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,3)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(2)")
                        .HasColumnName("createdDate");

                    b.Property<int>("Currency")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("currency");

                    b.Property<long>("MerchantId")
                        .HasColumnType("bigint")
                        .HasColumnName("merchantId");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("paymentStatus");

                    b.Property<long>("ShopperId")
                        .HasColumnType("bigint")
                        .HasColumnName("shopperId");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.HasIndex("ShopperId");

                    b.ToTable("payment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a036fba-2bbf-4530-a90c-c0d07c3fd23a"),
                            Amount = 100.000m,
                            CreatedDate = new DateTime(2021, 5, 4, 13, 41, 32, 691, DateTimeKind.Utc).AddTicks(5493),
                            Currency = 1,
                            MerchantId = 1L,
                            PaymentStatus = 0,
                            ShopperId = 1L
                        });
                });

            modelBuilder.Entity("DataAccess.Shopper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("cardNumber");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("cvv");

                    b.Property<int>("ExpireMonth")
                        .HasColumnType("int")
                        .HasColumnName("expireMonth");

                    b.Property<int>("ExpireYear")
                        .HasColumnType("int")
                        .HasColumnName("expireYear");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("lastName");

                    b.HasKey("Id");

                    b.ToTable("shopper");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CardNumber = "vHOScgRyhq1RCQCZ2Kb08OaleMrcR8Q42dPae1hX/yc=",
                            Cvv = "kFUwtPfKQ3M+LG3idKODhQ==",
                            ExpireMonth = 12,
                            ExpireYear = 2025,
                            FirstName = "John",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("DataAccess.Payment", b =>
                {
                    b.HasOne("DataAccess.Merchant", "Merchant")
                        .WithMany("Payments")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Shopper", "Shopper")
                        .WithMany("Payments")
                        .HasForeignKey("ShopperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchant");

                    b.Navigation("Shopper");
                });

            modelBuilder.Entity("DataAccess.Merchant", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DataAccess.Shopper", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
